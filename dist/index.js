!function(r,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("NotesWidget",[],n):"object"==typeof exports?exports.NotesWidget=n():r.NotesWidget=n()}(this,(()=>(()=>{"use strict";var r={817:(r,n,e)=>{e.d(n,{Z:()=>c});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&display=swap);"]),a.push([r.id,':root {\r\n  --background-color: rgb(11 12 22);\r\n  --background-secondary-color: rgb(22, 26, 49);\r\n  --text-color: rgb(255, 255, 255);\r\n  --text-color-secondary: #a0a0a0;\r\n  --green-color: rgb(18, 192, 108);\r\n  --green-darker-color: rgb(37, 71, 33);\r\n  --orange-color: rgb(201, 135, 74);\r\n  --orange-darker-color: rgb(95, 64, 35);\r\n  --main-font: "Montserrat", Arial, Helvetica;\r\n}\r\n\r\n.zf9znFFC7JHoooxebPbB {\r\n  box-shadow: 1px 1px 20px rgba(255, 255, 255, 0.05);\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-radius: 1rem;\r\n  background-color: var(--background-color);\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  max-width: 36rem;\r\n  max-height: 40rem;\r\n  overflow-y: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 20rem;\r\n}\r\n.GZpm5tUS2bl3INtcVTsy {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.HdlP2XYP4ELL_vsUl9v1 {\r\n  /* used as identifier in code */\r\n  overflow-y: scroll;\r\n}\r\n.bMl3uUcu_liY3R1eP9vg {\r\n  /* used as identifier in code */\r\n}\r\n.xfZ4g7H9NURN0JITVWyw {\r\n  margin: 1rem 0.5rem 0 0.5rem;\r\n}\r\n.xfZ4g7H9NURN0JITVWyw:last-child {\r\n  margin-bottom: 1rem;\r\n}\r\n.bli7Ie1Y6R0ore4sFxke {\r\n  cursor: default;\r\n  font-size: 20px;\r\n  color: var(--text-color);\r\n  font-family: var(--main-font);\r\n}\r\n.cArtVfI3UZ7lIZkLkCV9 {\r\n  cursor: default;\r\n  font-size: 1rem;\r\n  color: var(--text-color-secondary);\r\n  font-family: var(--main-font);\r\n  padding: 0.5rem;\r\n  margin-top: 0.5rem;\r\n}\r\n.xqSj6JeW_U3IXNgYQjsc {\r\n  cursor: text;\r\n  color: var(--text-color);\r\n  font-size: 1.3rem;\r\n  background-color: var(--background-secondary-color);\r\n  padding: 0.5rem 0.5rem 0.1rem 0.5rem;\r\n  border: 1px solid var(--background-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.YwJ2KJYpoB40so7LDtrN {\r\n  cursor: text;\r\n  margin-top: 0.5rem;\r\n  background-color: var(--background-secondary-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.cVA5OFaPelFZkx3iWxQD {\r\n  display: none;\r\n}\r\n.cnYjZyvvl8FQTlm2tDJI {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  cursor: move;\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-width: 0px;\r\n  border-bottom-width: 1px;\r\n  height: 4rem;\r\n}\r\n.S5oGf2YUYnTv2_4oNP8u {\r\n  cursor: pointer;\r\n  border-radius: 1rem;\r\n  padding: 0.35rem 0.6rem;\r\n  background-color: transparent;\r\n  border-width: 0;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  font-family: var(--main-font);\r\n  color: var(--text-color);\r\n}\r\n.S5oGf2YUYnTv2_4oNP8u:hover {\r\n  filter: brightness(120%);\r\n}\r\n.c58fRuFymIJ6u6UbjMHt {\r\n  border: 1px solid var(--orange-color);\r\n  background-color: var(--orange-darker-color);\r\n  color: var(--orange-color);\r\n  margin-top: 0.5rem;\r\n}\r\n.LlwfvQqkXDAZWSGlsVAg {\r\n  color: var(--green-color);\r\n}\r\n.ZLitwZAX8Mk8uaNoQwLF {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 0.6rem;\r\n}\r\n/* auto-resizsing textarea  */\r\n.Y5PiGzMzCk9BTFJTEPth {\r\n  padding: 5px;\r\n  min-height: 2rem;\r\n  overflow: auto;\r\n}\r\n\r\n.Ct2JGl20un6iLNjvDDJv {\r\n  background-color: var(--background-secondary-color);\r\n  min-width: 160px;\r\n  right: 0px;\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.VU5fSCYsbYREUXPRDMHy {\r\n  color: var(--text-color);\r\n  font-family: var(--main-font);\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.VU5fSCYsbYREUXPRDMHy:hover {\r\n  background-color: var(--background-secondary-color);\r\n  filter: brightness(125%);\r\n}\r\n\r\n.LRsEGRAGsRxGvUdqctpw {\r\n  color: #f75858;\r\n}\r\n\r\n@keyframes YH2x3XEtuKV7KKmXkYgy {\r\n  from {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n}\r\n\r\n@keyframes f8JPVejjI1dTWnJDXH6v {\r\n  from {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n  to {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n}\r\n',"",{version:3,sources:["webpack://./lib/style.css"],names:[],mappings:"AAEA;EACE,iCAAiC;EACjC,6CAA6C;EAC7C,gCAAgC;EAChC,+BAA+B;EAC/B,gCAAgC;EAChC,qCAAqC;EACrC,iCAAiC;EACjC,sCAAsC;EACtC,2CAA2C;AAC7C;;AAEA;EACE,kDAAkD;EAClD,2CAA2C;EAC3C,mBAAmB;EACnB,yCAAyC;EACzC,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,gBAAgB;AAClB;AACA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,+BAA+B;EAC/B,kBAAkB;AACpB;AACA;EACE,+BAA+B;AACjC;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,mBAAmB;AACrB;AACA;EACE,eAAe;EACf,eAAe;EACf,wBAAwB;EACxB,6BAA6B;AAC/B;AACA;EACE,eAAe;EACf,eAAe;EACf,kCAAkC;EAClC,6BAA6B;EAC7B,eAAe;EACf,kBAAkB;AACpB;AACA;EACE,YAAY;EACZ,wBAAwB;EACxB,iBAAiB;EACjB,mDAAmD;EACnD,oCAAoC;EACpC,yCAAyC;EACzC,qBAAqB;AACvB;AACA;EACE,YAAY;EACZ,kBAAkB;EAClB,mDAAmD;EACnD,qBAAqB;AACvB;AACA;EACE,aAAa;AACf;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,YAAY;EACZ,2CAA2C;EAC3C,iBAAiB;EACjB,wBAAwB;EACxB,YAAY;AACd;AACA;EACE,eAAe;EACf,mBAAmB;EACnB,uBAAuB;EACvB,6BAA6B;EAC7B,eAAe;EACf,eAAe;EACf,gBAAgB;EAChB,6BAA6B;EAC7B,wBAAwB;AAC1B;AACA;EACE,wBAAwB;AAC1B;AACA;EACE,qCAAqC;EACrC,4CAA4C;EAC5C,0BAA0B;EAC1B,kBAAkB;AACpB;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,iBAAiB;AACnB;AACA,6BAA6B;AAC7B;EACE,YAAY;EACZ,gBAAgB;EAChB,cAAc;AAChB;;AAEA;EACE,mDAAmD;EACnD,gBAAgB;EAChB,UAAU;EACV,2CAA2C;EAC3C,qBAAqB;AACvB;;AAEA;EACE,wBAAwB;EACxB,6BAA6B;EAC7B,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,mDAAmD;EACnD,wBAAwB;AAC1B;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE;IACE,UAAU;IACV,kBAAkB;EACpB;EACA;IACE,UAAU;IACV,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,UAAU;IACV,iBAAiB;EACnB;EACA;IACE,UAAU;IACV,kBAAkB;EACpB;AACF",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&display=swap");\r\n\r\n:root {\r\n  --background-color: rgb(11 12 22);\r\n  --background-secondary-color: rgb(22, 26, 49);\r\n  --text-color: rgb(255, 255, 255);\r\n  --text-color-secondary: #a0a0a0;\r\n  --green-color: rgb(18, 192, 108);\r\n  --green-darker-color: rgb(37, 71, 33);\r\n  --orange-color: rgb(201, 135, 74);\r\n  --orange-darker-color: rgb(95, 64, 35);\r\n  --main-font: "Montserrat", Arial, Helvetica;\r\n}\r\n\r\n.notes-main {\r\n  box-shadow: 1px 1px 20px rgba(255, 255, 255, 0.05);\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-radius: 1rem;\r\n  background-color: var(--background-color);\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  max-width: 36rem;\r\n  max-height: 40rem;\r\n  overflow-y: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 20rem;\r\n}\r\n.col {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.inner-container {\r\n  /* used as identifier in code */\r\n  overflow-y: scroll;\r\n}\r\n.draggable {\r\n  /* used as identifier in code */\r\n}\r\n.list-item-container {\r\n  margin: 1rem 0.5rem 0 0.5rem;\r\n}\r\n.list-item-container:last-child {\r\n  margin-bottom: 1rem;\r\n}\r\n.list-item-title {\r\n  cursor: default;\r\n  font-size: 20px;\r\n  color: var(--text-color);\r\n  font-family: var(--main-font);\r\n}\r\n.list-item-body {\r\n  cursor: default;\r\n  font-size: 1rem;\r\n  color: var(--text-color-secondary);\r\n  font-family: var(--main-font);\r\n  padding: 0.5rem;\r\n  margin-top: 0.5rem;\r\n}\r\n.input-title {\r\n  cursor: text;\r\n  color: var(--text-color);\r\n  font-size: 1.3rem;\r\n  background-color: var(--background-secondary-color);\r\n  padding: 0.5rem 0.5rem 0.1rem 0.5rem;\r\n  border: 1px solid var(--background-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.input-body {\r\n  cursor: text;\r\n  margin-top: 0.5rem;\r\n  background-color: var(--background-secondary-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.hidden {\r\n  display: none;\r\n}\r\n.top-menu {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  cursor: move;\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-width: 0px;\r\n  border-bottom-width: 1px;\r\n  height: 4rem;\r\n}\r\n.button-basics {\r\n  cursor: pointer;\r\n  border-radius: 1rem;\r\n  padding: 0.35rem 0.6rem;\r\n  background-color: transparent;\r\n  border-width: 0;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  font-family: var(--main-font);\r\n  color: var(--text-color);\r\n}\r\n.button-basics:hover {\r\n  filter: brightness(120%);\r\n}\r\n.edit-button {\r\n  border: 1px solid var(--orange-color);\r\n  background-color: var(--orange-darker-color);\r\n  color: var(--orange-color);\r\n  margin-top: 0.5rem;\r\n}\r\n.create-button {\r\n  color: var(--green-color);\r\n}\r\n.close-button {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 0.6rem;\r\n}\r\n/* auto-resizsing textarea  */\r\n.div-as-textarea {\r\n  padding: 5px;\r\n  min-height: 2rem;\r\n  overflow: auto;\r\n}\r\n\r\n.dd-items-container {\r\n  background-color: var(--background-secondary-color);\r\n  min-width: 160px;\r\n  right: 0px;\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.dd-item {\r\n  color: var(--text-color);\r\n  font-family: var(--main-font);\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.dd-item:hover {\r\n  background-color: var(--background-secondary-color);\r\n  filter: brightness(125%);\r\n}\r\n\r\n.dd-delete-item {\r\n  color: #f75858;\r\n}\r\n\r\n@keyframes slide-up {\r\n  from {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n}\r\n\r\n@keyframes slide-dn {\r\n  from {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n  to {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n}\r\n'],sourceRoot:""}]),a.locals={"notes-main":"zf9znFFC7JHoooxebPbB",col:"GZpm5tUS2bl3INtcVTsy","inner-container":"HdlP2XYP4ELL_vsUl9v1",draggable:"bMl3uUcu_liY3R1eP9vg","list-item-container":"xfZ4g7H9NURN0JITVWyw","list-item-title":"bli7Ie1Y6R0ore4sFxke","list-item-body":"cArtVfI3UZ7lIZkLkCV9","input-title":"xqSj6JeW_U3IXNgYQjsc","input-body":"YwJ2KJYpoB40so7LDtrN",hidden:"cVA5OFaPelFZkx3iWxQD","top-menu":"cnYjZyvvl8FQTlm2tDJI","button-basics":"S5oGf2YUYnTv2_4oNP8u","edit-button":"c58fRuFymIJ6u6UbjMHt","create-button":"LlwfvQqkXDAZWSGlsVAg","close-button":"ZLitwZAX8Mk8uaNoQwLF","div-as-textarea":"Y5PiGzMzCk9BTFJTEPth","dd-items-container":"Ct2JGl20un6iLNjvDDJv","dd-item":"VU5fSCYsbYREUXPRDMHy","dd-delete-item":"LRsEGRAGsRxGvUdqctpw","slide-up":"YH2x3XEtuKV7KKmXkYgy","slide-dn":"f8JPVejjI1dTWnJDXH6v"};const c=a},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,i){"string"==typeof r&&(r=[[null,r,void 0]]);var a={};if(t)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(a[l]=!0)}for(var s=0;s<r.length;s++){var d=[].concat(r[s]);t&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),a=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},a=[],c=0;c<r.length;c++){var l=r[c],s=t.base?l[0]+t.base:l[0],d=i[s]||0,A="".concat(s," ").concat(d);i[s]=d+1;var u=e(A),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,t);t.byIndex=c,n.splice(c,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var i=t(r=r||[],o=o||{});return function(r){r=r||[];for(var a=0;a<i.length;a++){var c=e(i[a]);n[c].references--}for(var l=t(r,o),s=0;s<i.length;s++){var d=e(i[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=l}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var i=n[t]={id:t,exports:{}};return r[t](i,i.exports,e),i.exports}e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),e.r=r=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.nc=void 0;var t={};return(()=>{e.r(t),e.d(t,{default:()=>j});var r=[];function n(n,e,t){void 0===t&&(t="click"),n.addEventListener(t,e),r.push({element:n,type:t,fn:e})}function o(n){var e=r.findIndex((function(r){return r===n}));if(-1!==e){var t=r[e];t.element.removeEventListener(t.type,t.fn),r.splice(e,1)}}function i(r,n){for(var e in n)r.style[e]=n[e]}var a=e(379),c=e.n(a),l=e(795),s=e.n(l),d=e(569),A=e.n(d),u=e(565),p=e.n(u),m=e(216),f=e.n(m),v=e(589),C=e.n(v),b=e(817),g={};g.styleTagTransform=C(),g.setAttributes=p(),g.insert=A().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=f(),c()(b.Z,g);const h=b.Z&&b.Z.locals?b.Z.locals:void 0,E=e.p+"a4464e18ca2fb4593b4eba811245e3d3.svg",y=e.p+"4468e3d5516706512e217b84004ca33c.svg";var B=function(){return B=Object.assign||function(r){for(var n,e=1,t=arguments.length;e<t;e++)for(var o in n=arguments[e])Object.prototype.hasOwnProperty.call(n,o)&&(r[o]=n[o]);return r},B.apply(this,arguments)},x=function(r,n,e,t){return new(e||(e=Promise))((function(o,i){function a(r){try{l(t.next(r))}catch(r){i(r)}}function c(r){try{l(t.throw(r))}catch(r){i(r)}}function l(r){var n;r.done?o(r.value):(n=r.value,n instanceof e?n:new e((function(r){r(n)}))).then(a,c)}l((t=t.apply(r,n||[])).next())}))},w=function(r,n){var e,t,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(e)throw new TypeError("Generator is already executing.");for(;a;)try{if(e=1,t&&(o=2&i[0]?t.return:i[0]?t.throw||((o=t.return)&&o.call(t),0):t.next)&&!(o=o.call(t,i[1])).done)return o;switch(t=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,t=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(r,a)}catch(r){i=[6,r],t=0}finally{e=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}},k={attachOnQuerySelector:"",toggleOnQuerySelector:"",notes:[]},S=document,L=function(){return x(void 0,void 0,void 0,(function(){return w(this,(function(r){switch(r.label){case 0:return[4,k.getNotes()];case 1:return[2,r.sent()]}}))}))},Y=function(r,e){r.forEach((function(r,t){return function(r,e,t){var o=S.createElement("div");o.classList.add(h.col,h["list-item-container"]);var a=S.querySelector(e);a.appendChild(o);var c=S.createElement("div");i(c,{display:"flex","justify-content":"space-between"});var l=S.createElement("h2");l.innerText=r.title,l.classList.add(h["list-item-title"]),c.appendChild(l);var s=S.createElement("div");i(s,{display:"flex","justify-content":"flex-end",cursor:"pointer"});var d=S.createElement("img");d.src=E,i(d,{height:"1.6rem"}),s.appendChild(d);var A=S.createElement("div");A.innerText="Delete",A.classList.add(h["dd-item"],h["dd-delete-item"]);var u=S.createElement("div");u.innerText="Placeholder item",u.classList.add(h["dd-item"]),n(A,(function(){var r;(r=C.getAttribute("data-id"),x(void 0,void 0,void 0,(function(){return w(this,(function(n){switch(n.label){case 0:return[4,k.deleteNote(r)];case 1:return n.sent(),[2,!0]}}))}))).then((function(r){r&&L().then((function(r){if(r){var n=".".concat(h["inner-container"]);S.querySelector(n).querySelectorAll(".".concat(h["list-item-container"])).forEach((function(r){return r.remove()})),Y(r,n),k.notes=r}}))}))}));var p=function(r,e,t){var o,a,c=document,l=c.createElement("div");i(l,{position:"relative",display:"inline-block"}),(null==t?void 0:t.containerClasses)&&(o=l.classList).add.apply(o,t.containerClasses),l.appendChild(r),n(r,(function(){var r="none"===s.style.display;i(s,{display:r?"block":"none"})}));var s=c.createElement("div");return i(s,{position:"absolute",display:"none"}),(null==t?void 0:t.itemsContainerClasses)&&(a=s.classList).add.apply(a,t.itemsContainerClasses),s.append.apply(s,e),l.appendChild(s),l}(s,[A,u],{itemsContainerClasses:[h["dd-items-container"]]});c.appendChild(p);var m=S.createElement("div");m.innerText=r.body,m.classList.add(h["list-item-body"]);var f=S.createElement("button");f.classList.add(h["button-basics"],h["edit-button"]),f.innerText="Edit";var v=S.createElement("div"),C=a.querySelector(".".concat(h["list-item-container"],":nth-of-type(").concat(t+1,")"));C.append(c,m,v),v.appendChild(f),n(f,(function(){!function(r,n,e){var t=S.createElement("div");t.classList.add(h.col,h["list-item-container"]);var o=S.createElement("input");o.value=k.notes[e].title,o.classList.add(h["input-title"]),o.placeholder="Add a title";var i=S.createElement("div");i.innerText=k.notes[e].body,i.classList.add(h["list-item-body"],h["input-body"],h["div-as-textarea"]),i.spellcheck=!0,i.contentEditable="true",t.appendChild(o),t.appendChild(i),S.querySelector(n).replaceChild(t,r),T(t,r)}(C,e,t)})),C.setAttribute("data-id",r.id)}(r,e,t)}))},T=function(r,e){var t=S.createElement("div"),i=S.createElement("button");i.classList.add(h["button-basics"]),i.innerText="Cancel";var a=S.createElement("button");a.classList.add(h["button-basics"]),a.innerText=e?"Update":"Save",r.appendChild(t),t.appendChild(a),t.appendChild(i);var c=r.querySelector("input"),l=r.querySelector(".".concat(h["div-as-textarea"])),s=function(){e?r.replaceWith(e):A()},d=function(){var r=function(r){r&&L().then((function(r){if((null==r?void 0:r.length)>0){A();var n=".".concat(h["inner-container"]);S.querySelector(n).querySelectorAll(".".concat(h["list-item-container"])).forEach((function(r){return r.remove()})),Y(r,n),k.notes=r}}))};e?function(r,n,e){return x(void 0,void 0,void 0,(function(){return w(this,(function(t){switch(t.label){case 0:return[4,k.updateNote(r,n,e)];case 1:return t.sent(),[2,!0]}}))}))}(e.getAttribute("data-id"),c.value,l.innerText).then(r):function(r,n){return x(void 0,void 0,void 0,(function(){return w(this,(function(e){switch(e.label){case 0:return[4,k.createNote(r,n)];case 1:return e.sent(),[2,!0]}}))}))}(c.value,l.innerText).then(r)},A=function(){o({element:a,type:"click",fn:d}),o({element:i,type:"click",fn:s}),t.remove(),c.remove(),l.remove()};n(a,d),n(i,s)};const j={configure:function(r){var e;k=B(B({},k),r);var t=S.querySelector(r.attachOnQuerySelector);t.classList.add(h.hidden,h["notes-main"],h.draggable);var o=S.createElement("span");o.classList.add(h["top-menu"]),t.appendChild(o);var a=S.createElement("div");a.classList.add(h["inner-container"]),t.appendChild(a),function(r,n){function e(e){if(e.target.classList.contains(n)){var t=document.querySelector(".".concat(r));t.moving=!0,e instanceof MouseEvent?(t.oldX=e.clientX,t.oldY=e.clientY):e instanceof TouchEvent?(t.oldX=e.touches[0].clientX,t.oldY=e.touches[0].clientY):console.warn("event is neither MouseEvent nor TouchEvent"),t.oldLeft=1*Number(window.getComputedStyle(t).getPropertyValue("left").split("px")[0]),t.oldTop=1*Number(window.getComputedStyle(t).getPropertyValue("top").split("px")[0]),document.onmousemove=o,document.ontouchmove=o,t.onmouseup=i,t.ontouchend=i}function o(r){t.moving&&(r instanceof MouseEvent?(t.distX=r.clientX-t.oldX,t.distY=r.clientY-t.oldY):e instanceof TouchEvent?(t.distX=r.touches[0].clientX-t.oldX,t.distY=r.touches[0].clientY-t.oldY):console.warn("event is neither MouseEvent nor TouchEvent"),t.style.left=t.oldLeft+t.distX+"px",t.style.top=t.oldTop+t.distY+"px")}function i(){t.moving=!1}}document.onmousedown=e,document.ontouchstart=e}(h.draggable,h["top-menu"]);var c=S.createElement("button");c.classList.add(h["create-button"],h["button-basics"]),o.appendChild(c),c.innerText="New note...",n(c,(function(){!function(){var r=S.createElement("div");r.classList.add(h.col,h["list-item-container"]);var n=S.createElement("input");n.classList.add(h["input-title"]),n.placeholder="Add a title";var e=S.createElement("div");e.classList.add(h["list-item-body"],h["input-body"],h["div-as-textarea"]),e.spellcheck=!0,e.contentEditable="true",e.ariaLabel="textarea",r.appendChild(n),r.appendChild(e);var t=S.querySelector(".".concat(h["list-item-container"],":nth-of-type(1)"));t?t.insertAdjacentElement("beforebegin",r):S.querySelector(".".concat(h["inner-container"])).appendChild(r),T(r)}()}));var l=S.createElement("div");l.ariaLabel="button",l.classList.add(h["close-button"]),o.appendChild(l);var s=S.createElement("img");s.src=y,i(s,{height:"1.6rem"}),l.appendChild(s),n(l,(function(){i(t,{"animation-name":h["slide-dn"],"animation-duration":"0.25s"})}));var d=function(r){r.animationName===h["slide-dn"]&&t.classList.add(h.hidden)};n(t,d,"webkitAnimationEnd"),n(t,d,"animationend"),(null===(e=r.toggleOnQuerySelector)||void 0===e?void 0:e.length)>0&&n(S.querySelector(r.toggleOnQuerySelector),(function(){var r;(r=t).classList.contains(h.hidden)?(r.classList.remove(h.hidden),i(r,{"animation-name":h["slide-up"],"animation-duration":"0.25s"})):i(r,{"animation-name":h["slide-dn"],"animation-duration":"0.25s"})})),L().then((function(r){(null==r?void 0:r.length)>0&&(Y(r,".".concat(h["inner-container"])),k.notes=r)}))},destroy:function(){r.forEach((function(r){var n=r.element,e=r.type,t=r.fn;return n.removeEventListener(e,t)}));var n=S.querySelector(k.attachOnQuerySelector);n&&n.remove()}}})(),t})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,