var r={817:(r,n,e)=>{e.d(n,{Z:()=>c});var o=e(537),t=e.n(o),a=e(645),i=e.n(a)()(t());i.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&display=swap);"]),i.push([r.id,':root {\r\n  --background-color: rgb(11 12 22);\r\n  --background-secondary-color: rgb(22, 26, 49);\r\n  --text-color: rgb(255, 255, 255);\r\n  --text-color-secondary: #a0a0a0;\r\n  --green-color: rgb(18, 192, 108);\r\n  --green-darker-color: rgb(37, 71, 33);\r\n  --orange-color: rgb(201, 135, 74);\r\n  --orange-darker-color: rgb(95, 64, 35);\r\n  --main-font: "Montserrat", Arial, Helvetica;\r\n}\r\n\r\n.zf9znFFC7JHoooxebPbB {\r\n  box-shadow: 1px 1px 20px rgba(255, 255, 255, 0.05);\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-radius: 1rem;\r\n  background-color: var(--background-color);\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  max-width: 40rem;\r\n  max-height: 80%;\r\n  /* looks good on mozilla */\r\n  overflow-y: scroll;\r\n}\r\n.GZpm5tUS2bl3INtcVTsy {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.HdlP2XYP4ELL_vsUl9v1 {\r\n  /* used as indentifier in code */\r\n\r\n  /* looks good on chrome but broken on mozilla */\r\n  /* overflow-y: scroll; */\r\n}\r\n.bMl3uUcu_liY3R1eP9vg {\r\n  /* used as indentifier in code */\r\n}\r\n.xfZ4g7H9NURN0JITVWyw {\r\n  margin: 1rem 0.5rem 0 0.5rem;\r\n}\r\n.xfZ4g7H9NURN0JITVWyw:last-child {\r\n  margin-bottom: 1rem;\r\n}\r\n.bli7Ie1Y6R0ore4sFxke {\r\n  cursor: default;\r\n  font-size: 20px;\r\n  color: var(--text-color);\r\n  font-family: var(--main-font);\r\n}\r\n.cArtVfI3UZ7lIZkLkCV9 {\r\n  cursor: default;\r\n  font-size: 1rem;\r\n  color: var(--text-color-secondary);\r\n  font-family: var(--main-font);\r\n  padding: 0.5rem;\r\n  margin-top: 0.5rem;\r\n}\r\n.xqSj6JeW_U3IXNgYQjsc {\r\n  cursor: text;\r\n  color: var(--text-color);\r\n  font-size: 1.3rem;\r\n  background-color: var(--background-secondary-color);\r\n  padding: 0.5rem 0.5rem 0.1rem 0.5rem;\r\n  border: 1px solid var(--background-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.YwJ2KJYpoB40so7LDtrN {\r\n  cursor: text;\r\n  margin-top: 0.5rem;\r\n  background-color: var(--background-secondary-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.cVA5OFaPelFZkx3iWxQD {\r\n  display: none;\r\n}\r\n.cnYjZyvvl8FQTlm2tDJI {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  cursor: move;\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-width: 0px;\r\n  border-bottom-width: 1px;\r\n}\r\n.S5oGf2YUYnTv2_4oNP8u {\r\n  cursor: pointer;\r\n  border-radius: 1rem;\r\n  padding: 0.35rem 0.6rem;\r\n  background-color: transparent;\r\n  border-width: 0;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  font-family: var(--main-font);\r\n}\r\n.S5oGf2YUYnTv2_4oNP8u:hover {\r\n  filter: brightness(120%);\r\n}\r\n.c58fRuFymIJ6u6UbjMHt {\r\n  border: 1px solid var(--orange-color);\r\n  background-color: var(--orange-darker-color);\r\n  color: var(--orange-color);\r\n  margin-top: 0.5rem;\r\n}\r\n.LlwfvQqkXDAZWSGlsVAg {\r\n  color: var(--green-color);\r\n}\r\n.ZLitwZAX8Mk8uaNoQwLF {\r\n  cursor: pointer;\r\n  width: 1.25rem;\r\n  fill: white;\r\n}\r\n/* auto-resizsing textarea  */\r\n.Y5PiGzMzCk9BTFJTEPth {\r\n  padding: 5px;\r\n  min-height: 2rem;\r\n  overflow: auto;\r\n}\r\n\r\n@keyframes YH2x3XEtuKV7KKmXkYgy {\r\n  from {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n}\r\n\r\n@keyframes f8JPVejjI1dTWnJDXH6v {\r\n  from {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n  to {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n}\r\n',"",{version:3,sources:["webpack://./lib/style.css"],names:[],mappings:"AAEA;EACE,iCAAiC;EACjC,6CAA6C;EAC7C,gCAAgC;EAChC,+BAA+B;EAC/B,gCAAgC;EAChC,qCAAqC;EACrC,iCAAiC;EACjC,sCAAsC;EACtC,2CAA2C;AAC7C;;AAEA;EACE,kDAAkD;EAClD,2CAA2C;EAC3C,mBAAmB;EACnB,yCAAyC;EACzC,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,gBAAgB;EAChB,eAAe;EACf,0BAA0B;EAC1B,kBAAkB;AACpB;AACA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,gCAAgC;;EAEhC,+CAA+C;EAC/C,wBAAwB;AAC1B;AACA;EACE,gCAAgC;AAClC;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,mBAAmB;AACrB;AACA;EACE,eAAe;EACf,eAAe;EACf,wBAAwB;EACxB,6BAA6B;AAC/B;AACA;EACE,eAAe;EACf,eAAe;EACf,kCAAkC;EAClC,6BAA6B;EAC7B,eAAe;EACf,kBAAkB;AACpB;AACA;EACE,YAAY;EACZ,wBAAwB;EACxB,iBAAiB;EACjB,mDAAmD;EACnD,oCAAoC;EACpC,yCAAyC;EACzC,qBAAqB;AACvB;AACA;EACE,YAAY;EACZ,kBAAkB;EAClB,mDAAmD;EACnD,qBAAqB;AACvB;AACA;EACE,aAAa;AACf;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,YAAY;EACZ,2CAA2C;EAC3C,iBAAiB;EACjB,wBAAwB;AAC1B;AACA;EACE,eAAe;EACf,mBAAmB;EACnB,uBAAuB;EACvB,6BAA6B;EAC7B,eAAe;EACf,eAAe;EACf,gBAAgB;EAChB,6BAA6B;AAC/B;AACA;EACE,wBAAwB;AAC1B;AACA;EACE,qCAAqC;EACrC,4CAA4C;EAC5C,0BAA0B;EAC1B,kBAAkB;AACpB;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,eAAe;EACf,cAAc;EACd,WAAW;AACb;AACA,6BAA6B;AAC7B;EACE,YAAY;EACZ,gBAAgB;EAChB,cAAc;AAChB;;AAEA;EACE;IACE,UAAU;IACV,kBAAkB;EACpB;EACA;IACE,UAAU;IACV,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,UAAU;IACV,iBAAiB;EACnB;EACA;IACE,UAAU;IACV,kBAAkB;EACpB;AACF",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&display=swap");\r\n\r\n:root {\r\n  --background-color: rgb(11 12 22);\r\n  --background-secondary-color: rgb(22, 26, 49);\r\n  --text-color: rgb(255, 255, 255);\r\n  --text-color-secondary: #a0a0a0;\r\n  --green-color: rgb(18, 192, 108);\r\n  --green-darker-color: rgb(37, 71, 33);\r\n  --orange-color: rgb(201, 135, 74);\r\n  --orange-darker-color: rgb(95, 64, 35);\r\n  --main-font: "Montserrat", Arial, Helvetica;\r\n}\r\n\r\n.notes-main {\r\n  box-shadow: 1px 1px 20px rgba(255, 255, 255, 0.05);\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-radius: 1rem;\r\n  background-color: var(--background-color);\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  max-width: 40rem;\r\n  max-height: 80%;\r\n  /* looks good on mozilla */\r\n  overflow-y: scroll;\r\n}\r\n.col {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.inner-container {\r\n  /* used as indentifier in code */\r\n\r\n  /* looks good on chrome but broken on mozilla */\r\n  /* overflow-y: scroll; */\r\n}\r\n.draggable {\r\n  /* used as indentifier in code */\r\n}\r\n.list-item-container {\r\n  margin: 1rem 0.5rem 0 0.5rem;\r\n}\r\n.list-item-container:last-child {\r\n  margin-bottom: 1rem;\r\n}\r\n.list-item-title {\r\n  cursor: default;\r\n  font-size: 20px;\r\n  color: var(--text-color);\r\n  font-family: var(--main-font);\r\n}\r\n.list-item-body {\r\n  cursor: default;\r\n  font-size: 1rem;\r\n  color: var(--text-color-secondary);\r\n  font-family: var(--main-font);\r\n  padding: 0.5rem;\r\n  margin-top: 0.5rem;\r\n}\r\n.input-title {\r\n  cursor: text;\r\n  color: var(--text-color);\r\n  font-size: 1.3rem;\r\n  background-color: var(--background-secondary-color);\r\n  padding: 0.5rem 0.5rem 0.1rem 0.5rem;\r\n  border: 1px solid var(--background-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.input-body {\r\n  cursor: text;\r\n  margin-top: 0.5rem;\r\n  background-color: var(--background-secondary-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.hidden {\r\n  display: none;\r\n}\r\n.top-menu {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  cursor: move;\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-width: 0px;\r\n  border-bottom-width: 1px;\r\n}\r\n.button-basics {\r\n  cursor: pointer;\r\n  border-radius: 1rem;\r\n  padding: 0.35rem 0.6rem;\r\n  background-color: transparent;\r\n  border-width: 0;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  font-family: var(--main-font);\r\n}\r\n.button-basics:hover {\r\n  filter: brightness(120%);\r\n}\r\n.edit-button {\r\n  border: 1px solid var(--orange-color);\r\n  background-color: var(--orange-darker-color);\r\n  color: var(--orange-color);\r\n  margin-top: 0.5rem;\r\n}\r\n.create-button {\r\n  color: var(--green-color);\r\n}\r\n.close-button {\r\n  cursor: pointer;\r\n  width: 1.25rem;\r\n  fill: white;\r\n}\r\n/* auto-resizsing textarea  */\r\n.div-as-textarea {\r\n  padding: 5px;\r\n  min-height: 2rem;\r\n  overflow: auto;\r\n}\r\n\r\n@keyframes slide-up {\r\n  from {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n}\r\n\r\n@keyframes slide-dn {\r\n  from {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n  to {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n}\r\n'],sourceRoot:""}]),i.locals={"notes-main":"zf9znFFC7JHoooxebPbB",col:"GZpm5tUS2bl3INtcVTsy","inner-container":"HdlP2XYP4ELL_vsUl9v1",draggable:"bMl3uUcu_liY3R1eP9vg","list-item-container":"xfZ4g7H9NURN0JITVWyw","list-item-title":"bli7Ie1Y6R0ore4sFxke","list-item-body":"cArtVfI3UZ7lIZkLkCV9","input-title":"xqSj6JeW_U3IXNgYQjsc","input-body":"YwJ2KJYpoB40so7LDtrN",hidden:"cVA5OFaPelFZkx3iWxQD","top-menu":"cnYjZyvvl8FQTlm2tDJI","button-basics":"S5oGf2YUYnTv2_4oNP8u","edit-button":"c58fRuFymIJ6u6UbjMHt","create-button":"LlwfvQqkXDAZWSGlsVAg","close-button":"ZLitwZAX8Mk8uaNoQwLF","div-as-textarea":"Y5PiGzMzCk9BTFJTEPth","slide-up":"YH2x3XEtuKV7KKmXkYgy","slide-dn":"f8JPVejjI1dTWnJDXH6v"};const c=i},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",o=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),o&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),o&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,o,t,a){"string"==typeof r&&(r=[[null,r,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var s=0;s<r.length;s++){var A=[].concat(r[s]);o&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),t&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=t):A[4]="".concat(t)),n.push(A))}},n}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),t="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(t," */"),i=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,o=0;o<n.length;o++)if(n[o].identifier===r){e=o;break}return e}function o(r,o){for(var a={},i=[],c=0;c<r.length;c++){var l=r[c],s=o.base?l[0]+o.base:l[0],A=a[s]||0,d="".concat(s," ").concat(A);a[s]=A+1;var u=e(d),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=t(p,o);o.byIndex=c,n.splice(c,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function t(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,t){var a=o(r=r||[],t=t||{});return function(r){r=r||[];for(var i=0;i<a.length;i++){var c=e(a[i]);n[c].references--}for(var l=o(r,t),s=0;s<a.length;s++){var A=e(a[s]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=l}}},569:r=>{var n={};r.exports=function(r,e){var o=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var t=void 0!==e.layer;t&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,t&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}}},n={};function e(o){var t=n[o];if(void 0!==t)return t.exports;var a=n[o]={id:o,exports:{}};return r[o](a,a.exports,e),a.exports}e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var o in n)e.o(n,o)&&!e.o(r,o)&&Object.defineProperty(r,o,{enumerable:!0,get:n[o]})},e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),e.nc=void 0;var o={};(()=>{function r(r,n,e,o){void 0===o&&(o="click"),n.addEventListener(o,e),r.push({element:n,type:o,fn:e})}function n(r,n){for(var e in n)r.style[e]=n[e]}e.d(o,{Z:()=>w});var t=e(379),a=e.n(t),i=e(795),c=e.n(i),l=e(569),s=e.n(l),A=e(565),d=e.n(A),u=e(216),p=e.n(u),m=e(589),f=e.n(m),C=e(817),g={};g.styleTagTransform=f(),g.setAttributes=d(),g.insert=s().bind(null,"head"),g.domAPI=c(),g.insertStyleElement=p(),a()(C.Z,g);const v=C.Z&&C.Z.locals?C.Z.locals:void 0;var b=function(){return b=Object.assign||function(r){for(var n,e=1,o=arguments.length;e<o;e++)for(var t in n=arguments[e])Object.prototype.hasOwnProperty.call(n,t)&&(r[t]=n[t]);return r},b.apply(this,arguments)},h={view:"LOADING",attachOnQuerySelector:"",toggleOnQuerySelector:"",notes:[]},E=[],y=document,B=function(){return r=void 0,n=void 0,o=function(){return function(r,n){var e,o,t,a,i={label:0,sent:function(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(a){return function(c){return function(a){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,o&&(t=2&a[0]?o.return:a[0]?o.throw||((t=o.return)&&t.call(o),0):o.next)&&!(t=t.call(o,a[1])).done)return t;switch(o=0,t&&(a=[2&a[0],t.value]),a[0]){case 0:case 1:t=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,o=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((t=(t=i.trys).length>0&&t[t.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!t||a[1]>t[0]&&a[1]<t[3])){i.label=a[1];break}if(6===a[0]&&i.label<t[1]){i.label=t[1],t=a;break}if(t&&i.label<t[2]){i.label=t[2],i.ops.push(a);break}t[2]&&i.ops.pop(),i.trys.pop();continue}a=n.call(r,i)}catch(r){a=[6,r],o=0}finally{e=t=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}}(this,(function(r){switch(r.label){case 0:return[4,h.getNotes()];case 1:return[2,r.sent()]}}))},new((e=void 0)||(e=Promise))((function(t,a){function i(r){try{l(o.next(r))}catch(r){a(r)}}function c(r){try{l(o.throw(r))}catch(r){a(r)}}function l(r){var n;r.done?t(r.value):(n=r.value,n instanceof e?n:new e((function(r){r(n)}))).then(i,c)}l((o=o.apply(r,n||[])).next())}));var r,n,e,o},x=function(n,e){n.forEach((function(n,o){return function(n,e,o){var t=y.createElement("div");t.classList.add(v.col,v["list-item-container"]);var a=y.querySelector(e);a.appendChild(t);var i=y.createElement("h2");i.innerText=n.title,i.classList.add(v["list-item-title"]);var c=y.createElement("div");c.innerText=n.body,c.classList.add(v["list-item-body"]);var l=y.createElement("button");l.classList.add(v["button-basics"],v["edit-button"]),l.innerText="Edit";var s=y.createElement("div"),A=a.querySelector(".".concat(v["list-item-container"],":nth-of-type(").concat(o+1,")"));A.append(i,c,s),s.appendChild(l),r(E,l,(function(){!function(r,n,e){var o=y.createElement("div");o.classList.add(v.col,v["list-item-container"]);var t=y.createElement("input");t.value=h.notes[e].title,t.classList.add(v["input-title"]),t.placeholder="Add a title";var a=y.createElement("div");a.innerText=h.notes[e].body,a.classList.add(v["list-item-body"],v["input-body"],v["div-as-textarea"]),a.spellcheck=!0,a.contentEditable="true",o.appendChild(t),o.appendChild(a),y.querySelector(n).replaceChild(o,r)}(A,e,o)}))}(n,e,o)}))};const w={configure:function(e){var o;h=b(b({},h),e);var t=y.querySelector(e.attachOnQuerySelector);t.classList.add(v.hidden,v["notes-main"],v.draggable);var a=y.createElement("div");a.classList.add(v["inner-container"]),t.appendChild(a);var i=y.createElement("span");i.classList.add(v["top-menu"]),a.appendChild(i),function(r,n){function e(e){if(e.target.classList.contains(n)){var o=document.querySelector(".".concat(r));o.moving=!0,e.clientX?(o.oldX=e.clientX,o.oldY=e.clientY):(o.oldX=e.touches[0].clientX,o.oldY=e.touches[0].clientY),o.oldLeft=1*Number(window.getComputedStyle(o).getPropertyValue("left").split("px")[0]),o.oldTop=1*Number(window.getComputedStyle(o).getPropertyValue("top").split("px")[0]),document.onmousemove=t,document.ontouchmove=t,o.onmouseup=a,o.ontouchend=a}function t(r){o.moving&&(r.clientX?(o.distX=r.clientX-o.oldX,o.distY=r.clientY-o.oldY):(o.distX=r.touches[0].clientX-o.oldX,o.distY=r.touches[0].clientY-o.oldY),o.style.left=o.oldLeft+o.distX+"px",o.style.top=o.oldTop+o.distY+"px")}function a(){o.moving=!1}}document.onmousedown=e,document.ontouchstart=e}(v.draggable,v["top-menu"]);var c=y.createElement("button");c.classList.add(v["create-button"],v["button-basics"]),i.appendChild(c),c.innerText="New note...",r(E,c,(function(){}));var l=y.createElement("div");l.ariaLabel="button",l.classList.add(v["close-button"]),i.appendChild(l),l.innerHTML='\n    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">\n    \x3c!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --\x3e\n      <path d="M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z"/>\n    </svg>\n    ',r(E,l,(function(){n(t,{"animation-name":v["slide-dn"],"animation-duration":"0.25s"})}));var s=function(r){r.animationName===v["slide-dn"]&&(console.log("addHide"),t.classList.add(v.hidden))};if(r(E,t,s,"webkitAnimationEnd"),r(E,t,s,"animationend"),(null===(o=e.toggleOnQuerySelector)||void 0===o?void 0:o.length)>0){var A=y.querySelector(e.toggleOnQuerySelector);r(E,A,(function(){var r;(r=t).classList.contains(v.hidden)?(r.classList.remove(v.hidden),n(r,{"animation-name":v["slide-up"],"animation-duration":"0.25s"})):n(r,{"animation-name":v["slide-dn"],"animation-duration":"0.25s"})}))}B().then((function(r){(null==r?void 0:r.length)>0&&(x(r,".".concat(v["inner-container"])),h.notes=r),h.view="READY"}))},destroy:function(){E.forEach((function(r){var n=r.element,e=r.type,o=r.fn;return n.removeEventListener(e,o)}));var r=y.querySelector(h.attachOnQuerySelector);r&&r.remove()}}})();var t=o.Z;export{t as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,