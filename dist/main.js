var r={817:(r,n,e)=>{e.d(n,{Z:()=>c});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&display=swap);"]),i.push([r.id,':root {\r\n  --background-color: rgb(11 12 22);\r\n  --background-secondary-color: rgb(22, 26, 49);\r\n  --text-color: rgb(255, 255, 255);\r\n  --text-color-secondary: #a0a0a0;\r\n  --green-color: rgb(18, 192, 108);\r\n  --green-darker-color: rgb(37, 71, 33);\r\n  --orange-color: rgb(201, 135, 74);\r\n  --orange-darker-color: rgb(95, 64, 35);\r\n  --main-font: "Montserrat", Arial, Helvetica;\r\n}\r\n\r\n.zf9znFFC7JHoooxebPbB {\r\n  box-shadow: 1px 1px 20px rgba(255, 255, 255, 0.05);\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-radius: 1rem;\r\n  background-color: var(--background-color);\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  max-width: 36rem;\r\n  max-height: 40rem;\r\n  overflow-y: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.GZpm5tUS2bl3INtcVTsy {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.HdlP2XYP4ELL_vsUl9v1 {\r\n  /* used as identifier in code */\r\n  overflow-y: scroll;\r\n}\r\n.bMl3uUcu_liY3R1eP9vg {\r\n  /* used as identifier in code */\r\n}\r\n.xfZ4g7H9NURN0JITVWyw {\r\n  margin: 1rem 0.5rem 0 0.5rem;\r\n}\r\n.xfZ4g7H9NURN0JITVWyw:last-child {\r\n  margin-bottom: 1rem;\r\n}\r\n.bli7Ie1Y6R0ore4sFxke {\r\n  cursor: default;\r\n  font-size: 20px;\r\n  color: var(--text-color);\r\n  font-family: var(--main-font);\r\n}\r\n.cArtVfI3UZ7lIZkLkCV9 {\r\n  cursor: default;\r\n  font-size: 1rem;\r\n  color: var(--text-color-secondary);\r\n  font-family: var(--main-font);\r\n  padding: 0.5rem;\r\n  margin-top: 0.5rem;\r\n}\r\n.xqSj6JeW_U3IXNgYQjsc {\r\n  cursor: text;\r\n  color: var(--text-color);\r\n  font-size: 1.3rem;\r\n  background-color: var(--background-secondary-color);\r\n  padding: 0.5rem 0.5rem 0.1rem 0.5rem;\r\n  border: 1px solid var(--background-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.YwJ2KJYpoB40so7LDtrN {\r\n  cursor: text;\r\n  margin-top: 0.5rem;\r\n  background-color: var(--background-secondary-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.cVA5OFaPelFZkx3iWxQD {\r\n  display: none;\r\n}\r\n.cnYjZyvvl8FQTlm2tDJI {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  cursor: move;\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-width: 0px;\r\n  border-bottom-width: 1px;\r\n  height: 4rem;\r\n}\r\n.S5oGf2YUYnTv2_4oNP8u {\r\n  cursor: pointer;\r\n  border-radius: 1rem;\r\n  padding: 0.35rem 0.6rem;\r\n  background-color: transparent;\r\n  border-width: 0;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  font-family: var(--main-font);\r\n  color: var(--text-color);\r\n}\r\n.S5oGf2YUYnTv2_4oNP8u:hover {\r\n  filter: brightness(120%);\r\n}\r\n.c58fRuFymIJ6u6UbjMHt {\r\n  border: 1px solid var(--orange-color);\r\n  background-color: var(--orange-darker-color);\r\n  color: var(--orange-color);\r\n  margin-top: 0.5rem;\r\n}\r\n.LlwfvQqkXDAZWSGlsVAg {\r\n  color: var(--green-color);\r\n}\r\n.ZLitwZAX8Mk8uaNoQwLF {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 0.5rem;\r\n}\r\n/* auto-resizsing textarea  */\r\n.Y5PiGzMzCk9BTFJTEPth {\r\n  padding: 5px;\r\n  min-height: 2rem;\r\n  overflow: auto;\r\n}\r\n\r\n@keyframes YH2x3XEtuKV7KKmXkYgy {\r\n  from {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n}\r\n\r\n@keyframes f8JPVejjI1dTWnJDXH6v {\r\n  from {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n  to {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n}\r\n',"",{version:3,sources:["webpack://./lib/style.css"],names:[],mappings:"AAEA;EACE,iCAAiC;EACjC,6CAA6C;EAC7C,gCAAgC;EAChC,+BAA+B;EAC/B,gCAAgC;EAChC,qCAAqC;EACrC,iCAAiC;EACjC,sCAAsC;EACtC,2CAA2C;AAC7C;;AAEA;EACE,kDAAkD;EAClD,2CAA2C;EAC3C,mBAAmB;EACnB,yCAAyC;EACzC,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,+BAA+B;EAC/B,kBAAkB;AACpB;AACA;EACE,+BAA+B;AACjC;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,mBAAmB;AACrB;AACA;EACE,eAAe;EACf,eAAe;EACf,wBAAwB;EACxB,6BAA6B;AAC/B;AACA;EACE,eAAe;EACf,eAAe;EACf,kCAAkC;EAClC,6BAA6B;EAC7B,eAAe;EACf,kBAAkB;AACpB;AACA;EACE,YAAY;EACZ,wBAAwB;EACxB,iBAAiB;EACjB,mDAAmD;EACnD,oCAAoC;EACpC,yCAAyC;EACzC,qBAAqB;AACvB;AACA;EACE,YAAY;EACZ,kBAAkB;EAClB,mDAAmD;EACnD,qBAAqB;AACvB;AACA;EACE,aAAa;AACf;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,YAAY;EACZ,2CAA2C;EAC3C,iBAAiB;EACjB,wBAAwB;EACxB,YAAY;AACd;AACA;EACE,eAAe;EACf,mBAAmB;EACnB,uBAAuB;EACvB,6BAA6B;EAC7B,eAAe;EACf,eAAe;EACf,gBAAgB;EAChB,6BAA6B;EAC7B,wBAAwB;AAC1B;AACA;EACE,wBAAwB;AAC1B;AACA;EACE,qCAAqC;EACrC,4CAA4C;EAC5C,0BAA0B;EAC1B,kBAAkB;AACpB;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,iBAAiB;AACnB;AACA,6BAA6B;AAC7B;EACE,YAAY;EACZ,gBAAgB;EAChB,cAAc;AAChB;;AAEA;EACE;IACE,UAAU;IACV,kBAAkB;EACpB;EACA;IACE,UAAU;IACV,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,UAAU;IACV,iBAAiB;EACnB;EACA;IACE,UAAU;IACV,kBAAkB;EACpB;AACF",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&display=swap");\r\n\r\n:root {\r\n  --background-color: rgb(11 12 22);\r\n  --background-secondary-color: rgb(22, 26, 49);\r\n  --text-color: rgb(255, 255, 255);\r\n  --text-color-secondary: #a0a0a0;\r\n  --green-color: rgb(18, 192, 108);\r\n  --green-darker-color: rgb(37, 71, 33);\r\n  --orange-color: rgb(201, 135, 74);\r\n  --orange-darker-color: rgb(95, 64, 35);\r\n  --main-font: "Montserrat", Arial, Helvetica;\r\n}\r\n\r\n.notes-main {\r\n  box-shadow: 1px 1px 20px rgba(255, 255, 255, 0.05);\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-radius: 1rem;\r\n  background-color: var(--background-color);\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  max-width: 36rem;\r\n  max-height: 40rem;\r\n  overflow-y: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.col {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.inner-container {\r\n  /* used as identifier in code */\r\n  overflow-y: scroll;\r\n}\r\n.draggable {\r\n  /* used as identifier in code */\r\n}\r\n.list-item-container {\r\n  margin: 1rem 0.5rem 0 0.5rem;\r\n}\r\n.list-item-container:last-child {\r\n  margin-bottom: 1rem;\r\n}\r\n.list-item-title {\r\n  cursor: default;\r\n  font-size: 20px;\r\n  color: var(--text-color);\r\n  font-family: var(--main-font);\r\n}\r\n.list-item-body {\r\n  cursor: default;\r\n  font-size: 1rem;\r\n  color: var(--text-color-secondary);\r\n  font-family: var(--main-font);\r\n  padding: 0.5rem;\r\n  margin-top: 0.5rem;\r\n}\r\n.input-title {\r\n  cursor: text;\r\n  color: var(--text-color);\r\n  font-size: 1.3rem;\r\n  background-color: var(--background-secondary-color);\r\n  padding: 0.5rem 0.5rem 0.1rem 0.5rem;\r\n  border: 1px solid var(--background-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.input-body {\r\n  cursor: text;\r\n  margin-top: 0.5rem;\r\n  background-color: var(--background-secondary-color);\r\n  border-radius: 0.5rem;\r\n}\r\n.hidden {\r\n  display: none;\r\n}\r\n.top-menu {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  cursor: move;\r\n  border: 1px solid rgba(149, 149, 149, 0.23);\r\n  border-width: 0px;\r\n  border-bottom-width: 1px;\r\n  height: 4rem;\r\n}\r\n.button-basics {\r\n  cursor: pointer;\r\n  border-radius: 1rem;\r\n  padding: 0.35rem 0.6rem;\r\n  background-color: transparent;\r\n  border-width: 0;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  font-family: var(--main-font);\r\n  color: var(--text-color);\r\n}\r\n.button-basics:hover {\r\n  filter: brightness(120%);\r\n}\r\n.edit-button {\r\n  border: 1px solid var(--orange-color);\r\n  background-color: var(--orange-darker-color);\r\n  color: var(--orange-color);\r\n  margin-top: 0.5rem;\r\n}\r\n.create-button {\r\n  color: var(--green-color);\r\n}\r\n.close-button {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 0.5rem;\r\n}\r\n/* auto-resizsing textarea  */\r\n.div-as-textarea {\r\n  padding: 5px;\r\n  min-height: 2rem;\r\n  overflow: auto;\r\n}\r\n\r\n@keyframes slide-up {\r\n  from {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n}\r\n\r\n@keyframes slide-dn {\r\n  from {\r\n    opacity: 1;\r\n    line-height: 25px;\r\n  }\r\n  to {\r\n    opacity: 0;\r\n    line-height: 500px;\r\n  }\r\n}\r\n'],sourceRoot:""}]),i.locals={"notes-main":"zf9znFFC7JHoooxebPbB",col:"GZpm5tUS2bl3INtcVTsy","inner-container":"HdlP2XYP4ELL_vsUl9v1",draggable:"bMl3uUcu_liY3R1eP9vg","list-item-container":"xfZ4g7H9NURN0JITVWyw","list-item-title":"bli7Ie1Y6R0ore4sFxke","list-item-body":"cArtVfI3UZ7lIZkLkCV9","input-title":"xqSj6JeW_U3IXNgYQjsc","input-body":"YwJ2KJYpoB40so7LDtrN",hidden:"cVA5OFaPelFZkx3iWxQD","top-menu":"cnYjZyvvl8FQTlm2tDJI","button-basics":"S5oGf2YUYnTv2_4oNP8u","edit-button":"c58fRuFymIJ6u6UbjMHt","create-button":"LlwfvQqkXDAZWSGlsVAg","close-button":"ZLitwZAX8Mk8uaNoQwLF","div-as-textarea":"Y5PiGzMzCk9BTFJTEPth","slide-up":"YH2x3XEtuKV7KKmXkYgy","slide-dn":"f8JPVejjI1dTWnJDXH6v"};const c=i},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,a){"string"==typeof r&&(r=[[null,r,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var s=0;s<r.length;s++){var d=[].concat(r[s]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var a={},i=[],c=0;c<r.length;c++){var l=r[c],s=t.base?l[0]+t.base:l[0],d=a[s]||0,A="".concat(s," ").concat(d);a[s]=d+1;var u=e(A),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,t);t.byIndex=c,n.splice(c,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var a=t(r=r||[],o=o||{});return function(r){r=r||[];for(var i=0;i<a.length;i++){var c=e(a[i]);n[c].references--}for(var l=t(r,o),s=0;s<a.length;s++){var d=e(a[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=l}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var a=n[t]={id:t,exports:{}};return r[t](a,a.exports,e),a.exports}e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;if("string"==typeof import.meta.url&&(r=import.meta.url),!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.nc=void 0;var t={};(()=>{function r(r,n,e,t){void 0===t&&(t="click"),n.addEventListener(t,e),r.push({element:n,type:t,fn:e})}function n(r,n){var e=r.findIndex((function(r){return r===n}));if(-1!==e){var t=r[e];t.element.removeEventListener(t.type,t.fn),r.splice(e,1)}}function o(r,n){for(var e in n)r.style[e]=n[e]}e.d(t,{Z:()=>I});var a=e(379),i=e.n(a),c=e(795),l=e.n(c),s=e(569),d=e.n(s),A=e(565),u=e.n(A),p=e(216),m=e.n(p),f=e(589),v=e.n(f),C=e(817),b={};b.styleTagTransform=v(),b.setAttributes=u(),b.insert=d().bind(null,"head"),b.domAPI=l(),b.insertStyleElement=m(),i()(C.Z,b);const g=C.Z&&C.Z.locals?C.Z.locals:void 0,h=e.p+"a4464e18ca2fb4593b4eba811245e3d3.svg",E=e.p+"4468e3d5516706512e217b84004ca33c.svg";var y=function(){return y=Object.assign||function(r){for(var n,e=1,t=arguments.length;e<t;e++)for(var o in n=arguments[e])Object.prototype.hasOwnProperty.call(n,o)&&(r[o]=n[o]);return r},y.apply(this,arguments)},B=function(r,n,e,t){return new(e||(e=Promise))((function(o,a){function i(r){try{l(t.next(r))}catch(r){a(r)}}function c(r){try{l(t.throw(r))}catch(r){a(r)}}function l(r){var n;r.done?o(r.value):(n=r.value,n instanceof e?n:new e((function(r){r(n)}))).then(i,c)}l((t=t.apply(r,n||[])).next())}))},x=function(r,n){var e,t,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(a){return function(c){return function(a){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,t&&(o=2&a[0]?t.return:a[0]?t.throw||((o=t.return)&&o.call(t),0):t.next)&&!(o=o.call(t,a[1])).done)return o;switch(t=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,t=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=n.call(r,i)}catch(r){a=[6,r],t=0}finally{e=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}},w={view:"LOADING",attachOnQuerySelector:"",toggleOnQuerySelector:"",notes:[]},k=[],Y=document,L=function(){return B(void 0,void 0,void 0,(function(){return x(this,(function(r){switch(r.label){case 0:return[4,w.getNotes()];case 1:return[2,r.sent()]}}))}))},S=function(n,e){n.forEach((function(n,t){return function(n,e,t){var a=Y.createElement("div");a.classList.add(g.col,g["list-item-container"]);var i=Y.querySelector(e);i.appendChild(a);var c=Y.createElement("div");o(c,{display:"flex","justify-content":"space-between"});var l=Y.createElement("h2");l.innerText=n.title,l.classList.add(g["list-item-title"]),c.appendChild(l);var s=Y.createElement("div");o(s,{width:"1rem",display:"flex","justify-content":"flex-end",cursor:"pointer"});var d=Y.createElement("img");d.src=h,o(d,{height:"1.6rem"}),s.appendChild(d),c.appendChild(s);var A=Y.createElement("div");A.innerText=n.body,A.classList.add(g["list-item-body"]);var u=Y.createElement("button");u.classList.add(g["button-basics"],g["edit-button"]),u.innerText="Edit";var p=Y.createElement("div"),m=i.querySelector(".".concat(g["list-item-container"],":nth-of-type(").concat(t+1,")"));m.append(c,A,p),p.appendChild(u),r(k,u,(function(){!function(r,n,e){var t=Y.createElement("div");t.classList.add(g.col,g["list-item-container"]),r.setAttribute("data-id",w.notes[e].id);var o=Y.createElement("input");o.value=w.notes[e].title,o.classList.add(g["input-title"]),o.placeholder="Add a title";var a=Y.createElement("div");a.innerText=w.notes[e].body,a.classList.add(g["list-item-body"],g["input-body"],g["div-as-textarea"]),a.spellcheck=!0,a.contentEditable="true",t.appendChild(o),t.appendChild(a),Y.querySelector(n).replaceChild(t,r),T(t,r)}(m,e,t)}))}(n,e,t)}))},T=function(e,t){var o=Y.createElement("div"),a=Y.createElement("button");a.classList.add(g["button-basics"]),a.innerText="Cancel";var i=Y.createElement("button");i.classList.add(g["button-basics"]),i.innerText=t?"Update":"Save",e.appendChild(o),o.appendChild(i),o.appendChild(a);var c=e.querySelector("input"),l=e.querySelector(".".concat(g["div-as-textarea"])),s=function(){t?e.replaceWith(t):A()},d=function(){var r=function(r){r&&L().then((function(r){if((null==r?void 0:r.length)>0){A();var n=".".concat(g["inner-container"]);Y.querySelector(n).querySelectorAll(".".concat(g["list-item-container"])).forEach((function(r){return r.remove()})),w.notes=r,S(r,n)}w.view="READY"}))};t?function(r,n,e){return B(void 0,void 0,void 0,(function(){return x(this,(function(t){switch(t.label){case 0:return[4,w.updateNote(r,n,e)];case 1:return t.sent(),[2,!0]}}))}))}(t.getAttribute("data-id"),c.value,l.innerText).then(r):function(r,n){return B(void 0,void 0,void 0,(function(){return x(this,(function(e){switch(e.label){case 0:return[4,w.createNote(r,n)];case 1:return e.sent(),[2,!0]}}))}))}(c.value,l.innerText).then(r)},A=function(){n(k,{element:i,type:"click",fn:d}),n(k,{element:a,type:"click",fn:s}),o.remove(),c.remove(),l.remove()};r(k,i,d),r(k,a,s)};const I={configure:function(n){var e;w=y(y({},w),n);var t=Y.querySelector(n.attachOnQuerySelector);t.classList.add(g.hidden,g["notes-main"],g.draggable);var a=Y.createElement("span");a.classList.add(g["top-menu"]),t.appendChild(a);var i=Y.createElement("div");i.classList.add(g["inner-container"]),t.appendChild(i),function(r,n){function e(e){if(e.target.classList.contains(n)){var t=document.querySelector(".".concat(r));t.moving=!0,e.clientX?(t.oldX=e.clientX,t.oldY=e.clientY):(t.oldX=e.touches[0].clientX,t.oldY=e.touches[0].clientY),t.oldLeft=1*Number(window.getComputedStyle(t).getPropertyValue("left").split("px")[0]),t.oldTop=1*Number(window.getComputedStyle(t).getPropertyValue("top").split("px")[0]),document.onmousemove=o,document.ontouchmove=o,t.onmouseup=a,t.ontouchend=a}function o(r){t.moving&&(r.clientX?(t.distX=r.clientX-t.oldX,t.distY=r.clientY-t.oldY):(t.distX=r.touches[0].clientX-t.oldX,t.distY=r.touches[0].clientY-t.oldY),t.style.left=t.oldLeft+t.distX+"px",t.style.top=t.oldTop+t.distY+"px")}function a(){t.moving=!1}}document.onmousedown=e,document.ontouchstart=e}(g.draggable,g["top-menu"]);var c=Y.createElement("button");c.classList.add(g["create-button"],g["button-basics"]),a.appendChild(c),c.innerText="New note...",r(k,c,(function(){!function(){var r=Y.createElement("div");r.classList.add(g.col,g["list-item-container"]);var n=Y.createElement("input");n.classList.add(g["input-title"]),n.placeholder="Add a title";var e=Y.createElement("div");e.classList.add(g["list-item-body"],g["input-body"],g["div-as-textarea"]),e.spellcheck=!0,e.contentEditable="true",r.appendChild(n),r.appendChild(e);var t=Y.querySelector(".".concat(g["list-item-container"],":nth-of-type(1)"));t?t.insertAdjacentElement("beforebegin",r):Y.querySelector(".".concat(g["inner-container"])).appendChild(r),T(r)}()}));var l=Y.createElement("div");l.ariaLabel="button",l.classList.add(g["close-button"]),a.appendChild(l);var s=Y.createElement("img");s.src=E,o(s,{height:"1.6rem"}),l.appendChild(s),r(k,l,(function(){o(t,{"animation-name":g["slide-dn"],"animation-duration":"0.25s"})}));var d=function(r){r.animationName===g["slide-dn"]&&t.classList.add(g.hidden)};if(r(k,t,d,"webkitAnimationEnd"),r(k,t,d,"animationend"),(null===(e=n.toggleOnQuerySelector)||void 0===e?void 0:e.length)>0){var A=Y.querySelector(n.toggleOnQuerySelector);r(k,A,(function(){var r;(r=t).classList.contains(g.hidden)?(r.classList.remove(g.hidden),o(r,{"animation-name":g["slide-up"],"animation-duration":"0.25s"})):o(r,{"animation-name":g["slide-dn"],"animation-duration":"0.25s"})}))}L().then((function(r){(null==r?void 0:r.length)>0&&(S(r,".".concat(g["inner-container"])),w.notes=r),w.view="READY"}))},destroy:function(){k.forEach((function(r){var n=r.element,e=r.type,t=r.fn;return n.removeEventListener(e,t)}));var r=Y.querySelector(w.attachOnQuerySelector);r&&r.remove()}}})();var o=t.Z;export{o as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,